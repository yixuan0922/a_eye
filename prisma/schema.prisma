generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Site {
  id            String         @id @default(cuid())
  name          String
  location      String
  code          String         @unique
  description   String?
  isActive      Boolean        @default(true)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  qrCode        String?
  attendance    Attendance[]
  cameras       Camera[]
  personnel     Personnel[]
  ppeViolations PPEViolation[]
  users         User[]
  violations    Violation[]

  @@map("sites")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  role      String   @default("admin")
  siteId    String
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  site      Site     @relation(fields: [siteId], references: [id])

  @@map("users")
}

model Camera {
  id            String         @id @default(cuid())
  name          String
  location      String
  ipAddress     String?
  status        String         @default("online")
  siteId        String
  isActive      Boolean        @default(true)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  streamUrl     String?
  attendance    Attendance[]
  site          Site           @relation(fields: [siteId], references: [id])
  ppeViolations PPEViolation[]
  violations    Violation[]

  @@map("cameras")
}

model Personnel {
  id             String         @id @default(cuid())
  name           String
  employeeId     String?
  department     String?
  position       String?
  status         String         @default("pending")
  accessLevel    String         @default("basic")
  siteId         String
  authorizedBy   String?
  authorizedAt   DateTime?
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  currentZone    String?
  expiresAt      DateTime?
  faceDescriptor Json?
  isAuthorized   Boolean        @default(false)
  requestDate    DateTime?
  role           String?
  photos         Json?
  attendance     Attendance[]   @relation("PersonnelAttendance")
  site           Site           @relation(fields: [siteId], references: [id])
  ppeViolations  PPEViolation[]
  violations     Violation[]

  @@map("personnel")
}

model Violation {
  id          String     @id @default(cuid())
  type        String
  description String
  severity    String     @default("medium")
  status      String     @default("active")
  location    String?
  siteId      String
  cameraId    String?
  personnelId String?
  imageUrl    String?
  resolvedAt  DateTime?
  resolvedBy  String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  camera      Camera?    @relation(fields: [cameraId], references: [id])
  personnel   Personnel? @relation(fields: [personnelId], references: [id])
  site        Site       @relation(fields: [siteId], references: [id])

  @@map("violations")
}

model Activity {
  id          String   @id @default(cuid())
  type        String
  description String
  userId      String?
  siteId      String?
  metadata    Json?
  createdAt   DateTime @default(now())

  @@map("activities")
}

model Attendance {
  id          String    @id @default(cuid())
  siteId      String
  cameraId    String
  confidence  Float
  timestamp   DateTime  @default(now())
  personnelId String
  camera      Camera    @relation(fields: [cameraId], references: [id], onDelete: Cascade)
  personnel   Personnel @relation("PersonnelAttendance", fields: [personnelId], references: [id], onDelete: Cascade)
  site        Site      @relation(fields: [siteId], references: [id], onDelete: Cascade)

  @@map("attendance")
}

model PPEViolation {
  id                 String     @id @default(cuid())
  personName         String
  personnelId        String?
  confidenceScore    Float?
  siteId             String
  cameraId           String?
  cameraName         String
  location           String?
  previousState      String
  currentState       String
  ppeWearing         Json
  ppeMissing         Json
  ppeRequired        Json
  violationReason    String
  severity           String     @default("medium")
  status             String     @default("active")
  detectionTimestamp DateTime
  gracePeriodStart   DateTime?
  gracePeriodEnd     DateTime?
  createdAt          DateTime   @default(now())
  updatedAt          DateTime   @updatedAt
  snapshotUrl        String?
  snapshotMetadata   Json?
  resolvedAt         DateTime?
  resolvedBy         String?
  resolutionNotes    String?
  acknowledgedAt     DateTime?
  acknowledgedBy     String?
  camera             Camera?    @relation(fields: [cameraId], references: [id])
  personnel          Personnel? @relation(fields: [personnelId], references: [id])
  site               Site       @relation(fields: [siteId], references: [id])

  @@index([siteId, status, detectionTimestamp])
  @@index([personName, detectionTimestamp])
  @@index([personnelId, detectionTimestamp])
  @@index([cameraId, detectionTimestamp])
  @@index([currentState, status])
  @@map("ppe_violations")
}
